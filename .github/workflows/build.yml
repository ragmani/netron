
name: Build

on:
  push:
    branches: [ '**' ]
    tags-ignore: [ '**' ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-20.04, ubuntu-22.04 ]
        #os: [ macos-latest, ubuntu-latest, windows-latest ]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install npm packages
        run: make install

      - name: ESLint
        run: make lint

      - name: Build Python Server
        run: make build_python

      - name: Build Electron
        shell: bash
        run: |
          case "${{ matrix.os }}" in
            macos*)
              CSC_IDENTITY_AUTO_DISCOVERY=false npx electron-builder --mac --universal --publish never -c.mac.identity=null
              ;;
            ubuntu*)
              npx electron-builder --linux appimage --x64 --publish never
              npx electron-builder --linux snap --x64 --publish never
              ;;
            windows*)
              npx electron-builder --win --x64 --arm64 --publish never
              ;;
          esac

      - name: Upload AppImage
        uses: actions/upload-artifact@v3
        with:
          name: netron-${{ matrix.os }}.AppImage
          path: ./dist/*.AppImage
          #path: ./dist/Netron-5.5.0.AppImage

      - name: Upload snap
        uses: actions/upload-artifact@v3
        with:
          name: netron-${{ matrix.os }}.snap
          path: |
            ./dist/*.snap
            #./dist/netron_5.5.0_amd64.snap

      - name: Upload whl
        uses: actions/upload-artifact@v3
        with:
          name: netron-${{ matrix.os }}.whl
          path: ./dist/dist/*.whl
          #path: ./dist/dist/netron-5.5.0-py2.py3-none-any.whl
